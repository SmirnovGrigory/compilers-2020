-- Expression evaluator

import List;
import State;

public fun evalBinop (op, x, y) {
case op of
	  "+"  -> x + y
	| "-"  -> x - y
	| "==" -> x == y
	| "!=" -> x != y
	| ">"  -> x > y
	| "<"  -> x < y
	| ">=" -> x >= y
	| "<=" -> x <= y
	| "*"  -> x * y
	| "/"  -> x / y
	| "%"  -> x % y
	| "&&" -> x && y
	| "!!" -> x !! y
esac
}



public fun evalExpr (st, expr) {
case expr of
	  Var(x)                  -> st (x)
	| Const(n)                -> n
	| Binop(op, expr1, expr2) -> evalBinop (op,evalExpr (st, expr1), evalExpr (st, expr2))
esac	  
}
