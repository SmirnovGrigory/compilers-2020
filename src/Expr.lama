-- Expression evaluator

import List;
import State;

public fun evalBinop (op, x, y) {
case op of
	  "+"  -> (x+y)
	| "-"  -> (x-y)
	| "==" -> (x==y)
	| "!=" -> (x!=y)
	| ">"  -> (x>y)
	| "<"  -> (x<y)
	| ">=" -> (x>=y)
	| "<=" -> (x<=y)
	| "*"  -> (x*y)
	| "/"  -> (x/y)
	| "%"  -> (x%y)
	| "&&" -> (x&&y)
	| "!!" -> (x!!y)
}



public fun evalExpr (st, expr) {
case expr of
	  Var(x)                  -> st (x)
	| Const(n)                -> n
	| Binop(op, expr1, expr2) -> evalBinop (op,evalExpr (expr1), evalExpr (expr2))
		  
}
